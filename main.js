(()=>{"use strict";var __webpack_modules__={415:()=>{eval('\n;// CONCATENATED MODULE: ./src/components/variables.js\nvar page = document.querySelector(\'.page\');\nvar profile = page.querySelector(\'.profile\');\nvar profileTitle = profile.querySelector(".profile__title");\nvar profileSubtitle = profile.querySelector(".profile__subtitle");\nvar buttonEdit = profile.querySelector(\'.profile__edit-button\');\nvar buttonAdd = profile.querySelector(\'.profile__add-button\');\nvar variables_popups = page.querySelectorAll(\'.popup\');\nvar popupEditProfile = page.querySelector(\'.popup_theme_edit\');\nvar popupAddCard = page.querySelector(\'.popup_theme_add-card\');\nvar formEdit = page.querySelector(".form_edit");\nvar formInputName = formEdit.querySelector(".form__input_theme_name");\nvar formDescription = formEdit.querySelector(".form__input_theme_description");\nvar formAdd = page.querySelector(\'.form_add-card\');\nvar formAvatar = page.querySelector(\'.form_avatar\');\nvar cardNameInput = page.querySelector(\'.form__input_theme_name-card\');\nvar cardLinkInput = formAdd.querySelector(\'.form__input_theme_link\');\nvar avatarLinkInput = page.querySelector(\'.form__input_theme_avatar\');\nvar popupPhoto = page.querySelector(\'.popup_theme_photo\');\nvar popupClosingIcon = page.querySelectorAll(\'.popup__close-icon\');\nvar popupPhotoImage = popupPhoto.querySelector(\'.popup__image\');\nvar popupPhotoDescription = popupPhoto.querySelector(\'.popup__description\');\nvar popupAvatar = page.querySelector(\'.popup_theme_avatar\');\nvar cardContainer = page.querySelector(".cards");\nvar cardTemplate = page.querySelector("#template-card").content;\nvar formCreateButton = page.querySelector(\'.form__button_create\');\nvar formSubmitButton = page.querySelector(\'.form__button_submit\');\nvar buttonAvatar = page.querySelector(\'.profile__overlay\');\nvar profileAvatar = page.querySelector(\'.profile__avatar\');\nvar buttonSaveEdit = page.querySelector(\'.form__button_submit\');\n// export const buttonSaveNewCard = page.querySelector(\'.form__button_create\');\nvar buttonSaveAvatar = page.querySelector(\'.form__button_avatar\');\n;// CONCATENATED MODULE: ./src/components/validate.js\n//показать и скрыть ошибку формы\nfunction showInputError(formElement, inputElement, errorMessage, data) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.add(data.formErrorTheme);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(data.formInputError);\n}\nfunction hideInputError(formElement, inputElement, data) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.remove(data.formErrorTheme);\n  errorElement.textContent = "";\n  errorElement.classList.remove(data.formInputError);\n}\n\n//проверка валидности поля ввода\nvar isValid = function isValid(formElement, inputElement, data) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity("");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, data);\n  } else {\n    hideInputError(formElement, inputElement, data);\n  }\n};\n//есть ли невалидное поле\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\n//выключенная кнопка\nvar disableButton = function disableButton(buttonElement) {\n  buttonElement.disabled = true;\n  buttonElement.classList.add(\'form__button_inactive\');\n};\n\n//функция переключения кнопки формы\nvar toggleFormButton = function toggleFormButton(inputList, buttonElement, data) {\n  if (hasInvalidInput(inputList)) {\n    disableButton(buttonElement);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(data.inactiveButtonClass);\n  }\n};\n\n//обработчик всем полям внутри формы\nvar setEventListeners = function setEventListeners(formElement, data) {\n  var inputList = Array.from(formElement.querySelectorAll(data.formInput));\n  var buttonElement = formElement.querySelector(data.buttonSelector);\n  toggleFormButton(inputList, buttonElement, data);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener("input", function () {\n      isValid(formElement, inputElement, data);\n      toggleFormButton(inputList, buttonElement, data);\n    });\n  });\n};\n\n//обработчик всем формам на странице\nvar enableValidation = function enableValidation(data) {\n  var formList = Array.from(document.querySelectorAll(data.formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, data);\n  });\n};\n;// CONCATENATED MODULE: ./src/components/modal.js\n\n\n//закрытие всех попапов\nfunction closeAllPopups() {\n  popups.forEach(function (popup) {\n    if (popup.classList.contains("popup_opened")) {\n      closePopup(popup);\n    }\n  });\n}\nvar handleCloseEscape = function handleCloseEscape(event) {\n  if (event.key === "Escape") {\n    var openedPopup = document.querySelector(\'.popup_opened\');\n    utils_closePopup(openedPopup);\n  }\n};\nfunction closePopupOverlay(evt) {\n  if (evt.target.classList.contains(\'popup_opened\')) {\n    utils_closePopup(evt.target);\n  }\n}\n;// CONCATENATED MODULE: ./src/components/utils.js\n\nfunction openPopup(popupName) {\n  popupName.classList.add("popup_opened");\n  document.addEventListener("keydown", handleCloseEscape);\n  document.addEventListener(\'click\', closePopupOverlay);\n}\nfunction utils_closePopup(popupName) {\n  popupName.classList.remove("popup_opened");\n  document.removeEventListener("keydown", handleCloseEscape);\n}\nfunction changeLoading(button, isLoading, buttonText) {\n  var loadingText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \'Сохранение...\';\n  if (isLoading) {\n    button.textContent = loadingText;\n  } else {\n    button.textContent = buttonText;\n  }\n}\n;// CONCATENATED MODULE: ./src/components/api.js\n\nvar config = {\n  baseUrl: "https://nomoreparties.co/v1/plus-cohort-25",\n  headers: {\n    authorization: "469baa30-a404-4c2f-8acf-7186e9d2571a",\n    "Content-Type": "application/json"\n  }\n};\nvar checkAnswer = function checkAnswer(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  }\n};\nvar getUserInfo = function getUserInfo() {\n  return fetch("".concat(config.baseUrl, "/users/me"), {\n    headers: config.headers\n  }).then(checkAnswer);\n};\n//загрузка карточек с сервера\nvar getCardsInfo = function getCardsInfo() {\n  return fetch("".concat(config.baseUrl, "/cards"), {\n    headers: config.headers\n  }).then(checkAnswer);\n};\n//инфо о пользователе\nvar loadProfileInfo = function loadProfileInfo() {\n  return fetch("".concat(config.baseUrl, "/users/me"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: formInputName.value,\n      about: formDescription.value\n    })\n  }).then(checkAnswer);\n};\n//пост новой карточки\nvar postNewCard = function postNewCard() {\n  return fetch("".concat(config.baseUrl, "/cards"), {\n    method: "POST",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: cardNameInput.value,\n      link: cardLinkInput.value\n    })\n  }).then(checkAnswer);\n};\n//новый аватар\nvar postNewAvatar = function postNewAvatar() {\n  return fetch("".concat(config.baseUrl, "/users/me/avatar"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarLinkInput.value\n    })\n  }).then(checkAnswer);\n};\n//удаление карточки\nvar deleteCardOnServer = function deleteCardOnServer(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/").concat(cardId), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(checkAnswer);\n};\n//добавление лайка\nvar addLikeCard = function addLikeCard(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/likes/").concat(cardId), {\n    method: "PUT",\n    headers: config.headers\n  }).then(checkAnswer);\n};\n//удаление лайка\nvar deleteLikeCard = function deleteLikeCard(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/likes/").concat(cardId), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(checkAnswer);\n};\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\nfunction addClassLike(event, cardId) {\n  addLikeCard(cardId).then(function (data) {\n    event.target.classList.add("card__like_active");\n    var cardLikes = event.target.closest(\'.card\').querySelector(\'.card__like-count\');\n    cardLikes.textContent = data.likes.length;\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\nfunction removeClassLike(event, cardId) {\n  deleteLikeCard(cardId).then(function (data) {\n    event.target.classList.remove("card__like_active");\n    var cardLikes = event.target.closest(\'.card\').querySelector(\'.card__like-count\');\n    cardLikes.textContent = data.likes.length;\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\nfunction deleteCard(event, cardId) {\n  deleteCardOnServer(cardId).then(function () {\n    event.target.closest(\'.card\').remove();\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\nvar createCard = function createCard(newCardObj, card, myUserId, userId) {\n  var newCard = cardTemplate.querySelector(".card").cloneNode(true);\n  var newCardName = newCard.querySelector(".card__title");\n  var newCardImage = newCard.querySelector(".card__image");\n  newCardName.textContent = newCardObj[\'name\'];\n  newCardImage.src = newCardObj[\'link\'];\n  newCardImage.alt = newCardObj[\'name\'];\n  var cardLike = newCard.querySelector(".card__like");\n  var cardImage = newCard.querySelector(".card__image");\n  var cardLikeCount = newCard.querySelector(\'.card__like-count\');\n  cardLikeCount.textContent = card.likes.length;\n  var buttonTrash = newCard.querySelector(".card__trash");\n  if (userId !== myUserId) {\n    buttonTrash.style.display = \'none\';\n  } else {\n    buttonTrash.setAttribute(\'card-id\', card._id); // добавила атрибут id карточки\n  }\n\n  cardLike.setAttribute(\'cardLike-id\', card._id);\n  var clickCard = function clickCard() {\n    // открытие попапа картинки\n    popupPhotoImage.src = newCardObj[\'link\'];\n    popupPhotoImage.alt = newCardObj[\'name\'];\n    popupPhotoDescription.textContent = newCardObj[\'name\'];\n    openPopup(popupPhoto);\n  };\n  cardImage.addEventListener("click", clickCard);\n  cardLike.addEventListener(\'click\', function (event) {\n    var cardId = event.target.getAttribute(\'cardLike-id\');\n    if (!event.target.classList.contains(\'card__like_active\')) {\n      addClassLike(event, cardId);\n    } else {\n      removeClassLike(event, cardId);\n    }\n  });\n  buttonTrash.addEventListener("click", function (event) {\n    var cardId = event.target.getAttribute(\'card-id\');\n    deleteCard(event, cardId);\n  });\n  return newCard;\n};\nvar addCard = function addCard(newCardObj, card, myUserId, userId) {\n  var newCard = createCard(newCardObj, card, myUserId, userId);\n  cardContainer.prepend(newCard);\n};\nfunction createCardFormSubmit(card, myUserId, userId) {\n  var newCardObj = {\n    name: card.name,\n    link: card.link,\n    likes: card.likes.length\n  };\n  addCard(newCardObj, card, myUserId, userId);\n  utils_closePopup(popupAddCard);\n  formAdd.reset();\n  disableButton(formCreateButton);\n}\n;// CONCATENATED MODULE: ./src/components/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nenableValidation({\n  formSelector: ".form",\n  formInput: ".form__input",\n  buttonSelector: ".form__button",\n  formErrorTheme: "form__input_theme_error",\n  formInputError: "form__input_error",\n  inactiveButtonClass: "form__button_inactive"\n});\n//инфо о пользователе и вывод карточек с сервера\nPromise.all([getUserInfo(), getCardsInfo()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    userInfo = _ref2[0],\n    cards = _ref2[1];\n  profileTitle.textContent = userInfo.name;\n  profileSubtitle.textContent = userInfo.about;\n  profileAvatar.src = userInfo.avatar;\n  var myUserId = userInfo._id;\n  cards.forEach(function (card) {\n    var userId = card.owner._id;\n    createCardFormSubmit(card, myUserId, userId);\n  });\n}).catch(function (err) {\n  console.log(err);\n});\n\n//закрытие всех попапов на крестик\npopupClosingIcon.forEach(function (icon) {\n  return icon.addEventListener("click", function () {\n    var iconsPopup = icon.closest(".popup");\n    utils_closePopup(iconsPopup);\n  });\n});\n\n//изменение имени в форме редактирования профиля\nfunction submitProfileForm(evt) {\n  evt.preventDefault();\n  var buttonText = formSubmitButton.textContent;\n  changeLoading(formSubmitButton, true, buttonText);\n  loadProfileInfo().then(function (profile) {\n    profileTitle.textContent = profile.name;\n    profileSubtitle.textContent = profile.about;\n    // changeLoading(formSubmitButton, true, loadingText, buttonText)\n    utils_closePopup(popupEditProfile);\n    disableButton(formSubmitButton);\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    changeLoading(formSubmitButton, false, buttonText);\n  });\n}\n//пост новой карточки на сервер\nfunction submitNewCardForm(evt) {\n  evt.preventDefault();\n  var buttonText = formCreateButton.textContent;\n  changeLoading(formCreateButton, true, buttonText);\n  postNewCard().then(function (data) {\n    createCardFormSubmit(data);\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    changeLoading(formCreateButton, false, buttonText);\n  });\n}\n//добавление нового аватара\nfunction submitAvatarForm(evt) {\n  var buttonText = buttonSaveAvatar.textContent;\n  changeLoading(buttonSaveAvatar, true, buttonText);\n  evt.preventDefault();\n  postNewAvatar().then(function (data) {\n    profileAvatar.src = data.avatar;\n    utils_closePopup(popupAvatar);\n    formAvatar.reset();\n    disableButton(buttonSaveAvatar);\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    changeLoading(buttonSaveAvatar, false, buttonText);\n  });\n}\nbuttonEdit.addEventListener("click", function () {\n  formInputName.value = profileTitle.textContent;\n  formDescription.value = profileSubtitle.textContent;\n  openPopup(popupEditProfile, formSubmitButton);\n});\nbuttonAdd.addEventListener("click", function () {\n  openPopup(popupAddCard);\n});\nbuttonAvatar.addEventListener(\'click\', function () {\n  openPopup(popupAvatar);\n});\nformEdit.addEventListener("submit", submitProfileForm);\nformAdd.addEventListener("submit", submitNewCardForm);\nformAvatar.addEventListener(\'submit\', submitAvatarForm);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///415\n')}},__webpack_exports__={};__webpack_modules__[415]()})();